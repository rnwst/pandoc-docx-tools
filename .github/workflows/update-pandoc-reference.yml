name: Update Pandoc Reference Document

on:
  schedule:
    # Runs daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-reference:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Install latest Pandoc using winget
      run: |
        winget install --source winget --exact --id JohnMacFarlane.Pandoc --accept-package-agreements --accept-source-agreements
    
    # - name: Add Pandoc to PATH
    #   run: |
    #     $pandocPath = "$env:LOCALAPPDATA\Microsoft\WinGet\Packages\JohnMacFarlane.Pandoc_*"
    #     $pandocDir = Get-ChildItem -Path $pandocPath -Directory | Select-Object -First 1
    #     if ($pandocDir) {
    #       $pandocExe = Join-Path $pandocDir.FullName "tools\pandoc.exe"
    #       if (Test-Path $pandocExe) {
    #         echo "$($pandocDir.FullName)\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    #       }
    #     }
    
    - name: Generate reference document
      run: |
        pandoc -o reference-doc.docx --print-default-data-file reference.docx
    
    - name: Apply reference document edits
      run: |
        .\apply-reference-doc-edits.ps1
    
    - name: Check for changes in reference-doc folder
      id: check-changes
      run: |
        git add reference-doc/
        $changes = git diff --cached --name-only
        if ($changes) {
          echo "changes=true" >> $env:GITHUB_OUTPUT
          echo "Changed files:" >> $env:GITHUB_OUTPUT
          echo $changes >> $env:GITHUB_OUTPUT
        } else {
          echo "changes=false" >> $env:GITHUB_OUTPUT
        }
    
    - name: Commit changes
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Update pandoc reference document
        
        Auto-generated from latest pandoc version
        Changed files: ${{ steps.check-changes.outputs.changes }}"
    
    - name: Push changes
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git push
